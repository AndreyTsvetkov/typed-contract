var BaseValidator=function(){function a(a,b){this._variableValue=a,b&&b.length>0?this._variableName=b:this._variableName="The variable"}return a.prototype.Value=function(){return this._variableValue},a.prototype.Name=function(){return this._variableName},a}(),__extends=this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)},StringValidator=function(a){function b(b,c){a.call(this,b,c)}return __extends(b,a),b.prototype.IsNotNull=function(){if(null===this._variableValue)throw new ReferenceError(this._variableName+" should not be null");return this},b.prototype.IsNull=function(){if(null!==this._variableValue)throw new ReferenceError(this._variableName+" should be null");return this},b.prototype.IsDefined=function(){if("undefined"==typeof this._variableValue)throw new ReferenceError(this._variableName+" should be defined");return this},b.prototype.IsNotDefined=function(){if("undefined"!=typeof this._variableValue)throw new ReferenceError(this._variableName+" should not be defined");return this},b.prototype.IsLengthIsGreaterOrEqualThan=function(a,b){if(this._variableValue.length<a)throw new RangeError(this._variableValue+" is out of length range by a of "+(this._variableValue.length-a)+",\n            your specified range was "+a+" for "+this._variableName+" ");return this},b.prototype.IsNullOrUndefined=function(){if(null!==this._variableValue||"undefined"!=typeof this._variableValue)throw new ReferenceError(this._variableName+" should not be null or undefined");return this},b.prototype.IsEqualTo=function(a){if(this._variableValue!==a)throw new RangeError(this._variableName+" should be equal to the string variable "+a);return this},b.prototype.IsNotEqualTo=function(a){if(this._variableValue===a)throw new RangeError(this._variableName+" should not be equal to the string variable "+a);return this},b.prototype.isLessThan=function(a){if(this._variableValue.length>a.length)throw new ReferenceError(this._variableName+" should be less than "+a+" but is "+this._variableValue);return this},b.prototype.isNotLessThan=function(a){if(this._variableValue.length<a.length)throw new ReferenceError(this._variableName+" should not be less that "+a+" but is "+this._variableValue+" ");return this},b}(BaseValidator),BooleanValidator=function(a){function b(b,c){a.call(this,b,c)}return __extends(b,a),b.prototype.IsNull=function(){if(null===this._variableValue&&"object"==typeof this._variableValue)return this;throw new ReferenceError(this._variableName+" should be null")},b.prototype.IsNotNull=function(){if(null==this._variableValue)throw new ReferenceError(this._variableName+" should not be null");return this},b.prototype.IsDefined=function(){if("undefined"==typeof this._variableValue)throw new ReferenceError(this._variableName+" should be defined");return this},b.prototype.IsUndefined=function(){if("undefined"!=typeof this._variableValue)throw new ReferenceError(this._variableName+" should be undefined");return this},b.prototype.IsNullOrUndefined=function(){if(null!==this._variableValue||void 0!==typeof this._variableValue)throw new ReferenceError(this._variableName+" should be null or undefined");return this},b.prototype.IsEqualTo=function(a){if(!this._variableValue===a)throw new RangeError(this._variableName+" should be equal to the boolean variable "+a);return this},b.prototype.IsNotEqualTo=function(a){if(this._variableValue===a)throw new RangeError(this._variableName+" should not be equal to the boolean "+a);return this},b.prototype.IsTrue=function(){if(this._variableValue===!1)throw new RangeError(this._variableName+" should be true");return this},b.prototype.IsFalse=function(){if(this._variableValue===!0)throw new RangeError(this._variableName+" should be false");return this},b}(BaseValidator),NumberValidator=function(a){function b(b,c){a.call(this,b,c)}return __extends(b,a),b.prototype.IsNotNull=function(){if(null===this._variableValue)throw new ReferenceError(this._variableName+" should not be null");return this},b.prototype.IsNull=function(){if(null!==this._variableValue)throw new ReferenceError(this._variableName+" should be null");return this},b.prototype.IsDefined=function(){if("undefined"==typeof this._variableValue)throw new ReferenceError(this._variableName+" should be defined");return this},b.prototype.IsUndefined=function(){if("undefined"!=typeof this._variableValue)throw new ReferenceError(this._variableName+" should not be defined");return this},b.prototype.IsNullOrUndefined=function(){if(null!==this._variableValue||"undefined"!=typeof this._variableValue)throw new ReferenceError(this._variableName+" should not be null or undefined");return this},b.prototype.IsEqualTo=function(a){if(this._variableValue!==a)throw new RangeError(this._variableName+" should be equal to the number variable "+a);return this},b.prototype.IsNotEqualTo=function(a){if(this._variableValue===a)throw new RangeError(this._variableName+" should not be equal to the number variable "+a);return this},b.prototype.IsGreaterThan=function(a){if(this._variableValue<a)throw new RangeError(this._variableName+" should be greater than "+a+" but is "+this._variableValue);return this},b.prototype.IsNotGreaterThan=function(a){if(this._variableValue>a)throw new RangeError(this._variableName+" should not be greater than "+a+" but is "+this._variableValue);return this},b.prototype.IsGreaterOrEqualThan=function(a){if(this._variableValue<a)throw new RangeError(this._variableName+" should be greater than "+a+" but is "+a);return this},b.prototype.IsNotGreaterOrEqualThan=function(a){if(this._variableValue>a)throw new RangeError(this._variableName+" should not be greater or equal to "+a+" but is "+this._variableValue);return this},b.prototype.IsLessThan=function(a){if(this._variableValue>=a)throw new RangeError(this._variableName+" should be less than "+a+" but is "+this._variableValue);return this},b.prototype.IsNotLessThan=function(a){if(this._variableValue<=a)throw new RangeError(this._variableName+" should not be less than "+a+" but is "+this._variableValue);return this},b.prototype.IsLessOrEqualThan=function(a){if(this._variableValue>a)throw new ReferenceError(this._variableName+" should be less or equal than "+a+" but is "+this._variableName);return this},b.prototype.IsNotLessOrEqualThan=function(a){if(this._variableValue<=a)throw new ReferenceError(this._variableName+" should not be less or equal\n                 than "+a+" but is "+this._variableValue);return this},b}(BaseValidator),ArrayValidator=function(a){function b(b,c){a.call(this,b,c)}return __extends(b,a),b.prototype.IsNull=function(){if(null!==this._variableValue)throw new ReferenceError(this._variableName+" should be null");return this},b.prototype.IsNotNull=function(){if(null===this._variableValue)throw new ReferenceError(this._variableName+" should not be null");return this},b.prototype.IsDefined=function(){if("undefined"==typeof this._variableValue)throw new ReferenceError(this._variableName+" should be defined");return this},b.prototype.IsUndefined=function(){if(void 0!==this._variableValue)throw new ReferenceError(this._variableName+" should be undefined");return this},b.prototype.IsNullOrUndefined=function(){if(null!==this._variableValue||"undefined"!=typeof this._variableValue)throw new ReferenceError(this._variableName+" should be null or undefined");return this},b.prototype.IsEqualTo=function(a,b){if(this._variableValue[b]!==a[b])throw new RangeError(this._variableName+" should be equal to array variable "+a+" at the index "+b);return this},b.prototype.IsNotEqualTo=function(a,b){if(this._variableValue[b]===a[b])throw new RangeError(this._variableName+" should be equal to array variable "+a+" at the index "+b);return this},b}(BaseValidator),Contract;!function(a){"use strict";function b(a,b){return void 0===b&&(b=void 0),"string"==typeof a||null===a||void 0===a?new StringValidator(a,b):"boolean"==typeof a||null===a||void 0===a?new BooleanValidator(a,b):"number"==typeof a||null===a||void 0===a?new NumberValidator(a,b):a instanceof Array||a instanceof Array===null||a instanceof Array===void 0?new ArrayValidator(a,b):void 0}function c(a){return!0}a.In=b,a.Out=c}(Contract||(Contract={}));